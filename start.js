require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
async function initDatabase() {
    try {
        console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
        console.log('üìç Railway Environment:', process.env.RAILWAY_ENVIRONMENT);
        
        if (process.env.RAILWAY_ENVIRONMENT) {
            // MongoDB –¥–ª—è Railway
            const { connectMongoDB, Products } = require('./config/mongodb');
            
            const connected = await connectMongoDB();
            if (!connected) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB');
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ
            const productCount = await Products.countDocuments();
            
            if (productCount === 0) {
                console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MongoDB...');
                
                const productsData = [
                    { title: 'WHOPPER¬Æ', description: 'Our KING-sized burger with flame-grilled beef, tomatoes, fresh lettuce, mayonnaise, ketchup, crunchy pickles, and onions, all on a toasted sesame seed bun.', price: 411, image: '/img/whopper.png', tag: 'whopper' },
                    { title: 'BIG KING XXL', description: 'Two flame-grilled beef patties, KING-sized, with melted cheese, fresh lettuce, onions, pickles, and our special BIG KING sauce, all on a toasted sesame seed bun.', price: 486, image: '/img/big-king-xxl.png', tag: 'big-king-xxl' },
                    { title: 'PLANT-BASED WHOPPER¬Æ', description: 'A delicious plant-based patty, flame-grilled, with tomatoes, fresh lettuce, mayonnaise, ketchup, crunchy pickles, and onions, all on a toasted sesame seed bun.', price: 449, image: '/img/plant-based-whopper.png', tag: 'plant-based-whopper' },
                    { title: 'CRISPY CHICKEN', description: 'Crispy chicken fillet, fresh lettuce, and creamy mayonnaise on a toasted sesame seed bun.', price: 336, image: '/img/crispy-chicken.png', tag: 'crispy-chicken' },
                    { title: 'KING FRIES', description: 'Our famous golden, crispy fries, lightly salted.', price: 131, image: '/img/king-fries.png', tag: 'king-fries' },
                    { title: 'ONION RINGS', description: 'Golden, crispy onion rings, perfect for dipping.', price: 149, image: '/img/onion-rings.png', tag: 'onion-rings' },
                    { title: 'COCA-COLA', description: 'Refreshing Coca-Cola.', price: 93, image: '/img/coca-cola.png', tag: 'coca-cola' },
                    { title: 'FANTA', description: 'Refreshing Fanta Orange.', price: 93, image: '/img/fanta.png', tag: 'fanta' },
                    { title: 'CHOCOLATE SUNDAE', description: 'Creamy vanilla ice cream with rich chocolate sauce.', price: 123, image: '/img/chocolate-sundae.png', tag: 'chocolate-sundae' },
                    { title: 'APPLE PIE', description: 'Warm apple pie with a crispy crust.', price: 104, image: '/img/apple-pie.png', tag: 'apple-pie' }
                ];
                
                await Products.insertMany(productsData);
                console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ MongoDB!');
            } else {
                console.log('‚úÖ MongoDB —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            }
        } else {
            // SQLite –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            const { sequelize, Products } = require('./models');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            await sequelize.authenticate();
            console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—ã
            await sequelize.sync();
            console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –±–∞–∑–µ
            const productCount = await Products.count();
            
            if (productCount === 0) {
                console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SQLite...');
                
                const productsData = [
                    { title: 'WHOPPER¬Æ', description: 'Our KING-sized burger with flame-grilled beef, tomatoes, fresh lettuce, mayonnaise, ketchup, crunchy pickles, and onions, all on a toasted sesame seed bun.', price: 411, image: '/img/whopper.png', tag: 'whopper' },
                    { title: 'BIG KING XXL', description: 'Two flame-grilled beef patties, KING-sized, with melted cheese, fresh lettuce, onions, pickles, and our special BIG KING sauce, all on a toasted sesame seed bun.', price: 486, image: '/img/big-king-xxl.png', tag: 'big-king-xxl' },
                    { title: 'PLANT-BASED WHOPPER¬Æ', description: 'A delicious plant-based patty, flame-grilled, with tomatoes, fresh lettuce, mayonnaise, ketchup, crunchy pickles, and onions, all on a toasted sesame seed bun.', price: 449, image: '/img/plant-based-whopper.png', tag: 'plant-based-whopper' },
                    { title: 'CRISPY CHICKEN', description: 'Crispy chicken fillet, fresh lettuce, and creamy mayonnaise on a toasted sesame seed bun.', price: 336, image: '/img/crispy-chicken.png', tag: 'crispy-chicken' },
                    { title: 'KING FRIES', description: 'Our famous golden, crispy fries, lightly salted.', price: 131, image: '/img/king-fries.png', tag: 'king-fries' },
                    { title: 'ONION RINGS', description: 'Golden, crispy onion rings, perfect for dipping.', price: 149, image: '/img/onion-rings.png', tag: 'onion-rings' },
                    { title: 'COCA-COLA', description: 'Refreshing Coca-Cola.', price: 93, image: '/img/coca-cola.png', tag: 'coca-cola' },
                    { title: 'FANTA', description: 'Refreshing Fanta Orange.', price: 93, image: '/img/fanta.png', tag: 'fanta' },
                    { title: 'CHOCOLATE SUNDAE', description: 'Creamy vanilla ice cream with rich chocolate sauce.', price: 123, image: '/img/chocolate-sundae.png', tag: 'chocolate-sundae' },
                    { title: 'APPLE PIE', description: 'Warm apple pie with a crispy crust.', price: 104, image: '/img/apple-pie.png', tag: 'apple-pie' }
                ];
                
                await Products.bulkCreate(productsData);
                console.log('‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ SQLite!');
            } else {
                console.log('‚úÖ SQLite —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
            }
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
        console.error('üìã –ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
        
        // –ù–∞ Railway –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ —Å –æ—à–∏–±–∫–æ–π –ë–î
        if (process.env.RAILWAY_ENVIRONMENT) {
            console.log('‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Railway');
        } else {
            throw error;
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
initDatabase().then(() => {
    const web = require("./web");
    const bot = require("./bot");
}).catch(error => {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error);
    process.exit(1);
});